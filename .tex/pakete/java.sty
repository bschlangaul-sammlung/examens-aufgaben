\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesPackage{bschlangaul-java}[2021/09/14 Ein Hüll-Paket um
`syntax`, das sich um die Syntax-Hervorhebung des Java-Codes kümmert.]
%    \end{macrocode}

% \bFaulenzer{
%   j = bJavaCode,
% }

%    \begin{macrocode}
\ExplSyntaxOn
%    \end{macrocode}

%    \begin{macrocode}
\bLadePakete{syntax}
%    \end{macrocode}

%    \begin{macrocode}
\directlua{
  syntax = require('bschlangaul-java')
  syntax.importiere_konfiguration('tex_repo_lokaler_pfad', '\LehramtInformatikRepository')
  syntax.importiere_konfiguration('github_domain', '\LehramtInformatikGithubDomain')
  syntax.importiere_konfiguration('github_raw_domain', '\LehramtInformatikGithubRawDomain')
  syntax.importiere_konfiguration('github_tex_repo', '\LehramtInformatikGithubTexRepo')
  syntax.importiere_konfiguration('github_code_repo', '\LehramtInformatikGithubCodeRepo')
  syntax.importiere_konfiguration('git_branch', '\LehramtInformatikGitBranch')
}
%    \end{macrocode}

% \begin{environment}{bJavaAngabe}
% Eine Umgebung für Java-Code, ohne Zeilennummer und etwas eingerückt
% um den Java-Code in Angaben / Aufgabestellungen zu setzen.
%    \begin{macrocode}
\newminted[bJavaAngabe]{java}
{
  xleftmargin=1cm
}
%    \end{macrocode}
% \end{environment}

% \begin{macro}{\bJavaCode}
% Im Zeilenfluss einen kurzen Java-Code-Ausschnitt setzen. Es werden automatische
% Zeilenumbrüche gemacht.
% \bMakroFaulenzer{j}{liJavaCode}
%    \begin{macrocode}
\def\bJavaCode#1
{
  \,
  \textcolor{blue}{
    \mintinline[
      fontsize=\normalsize,
      breakanywhere % https://github.com/gpoore/minted/issues/31#issuecomment-458640242
    ]{java}|#1|
  }
  \,
}
%    \end{macrocode}
% \end{macro}

%    \begin{macrocode}
\def\li@GithubLink#1#2
{
  \begin{flushright}
    \tiny
    Code-Beispiel~auf~Github~ansehen:~
    \href{#1}{\nolinkurl{#2}}
  \end{flushright}
}
%    \end{macrocode}

% \begin{macro}{\bJavaDatei}
% Eine komplette Java-Datei einbinden, die
% Verzeichnis |./Code/src/main/java/org/bschlangaul| liegt.
%    \begin{macrocode}
\NewDocumentCommand{ \bJavaDatei }{ O{firstline=3} m }
{
  \inputminted[#1]{java}{
    \directlua{
      syntax.drucke_absoluten_pfad('#2', false)
    }
  }
  \li@GithubLink
    {\directlua{syntax.drucke_github_url('#2', false)}}
    {\directlua{syntax.drucke_relativen_repo_pfad('#2', false)}}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bJavaTestDatei}
% Eine komplette Java-Test-Datei einbinden,
% die Verzeichnis |./Code/src/test/java/org/bschlangaul| liegt.
%    \begin{macrocode}
\NewDocumentCommand{ \bJavaTestDatei }{ O{firstline=3} m }
{
  \inputminted[#1]{java}{
    \directlua{
      syntax.drucke_absoluten_pfad('#2', true)
    }
  }
  \li@GithubLink
    {\directlua{syntax.drucke_github_url('#2', true)}}
    {\directlua{syntax.drucke_relativen_repo_pfad('#2', true)}}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bJavaExamen}
% |\bJavaExamen{66116}{2015}{03}{Kunde}|
% Regulärer Ausdruck zum Konvertieren:
% |\\bJavaDatei(\[.*\])?\{.*examen_(\d{5})_(\d{4})_(\d{2})/(.*)\}|
% |\\bJavaExamen$1{$2}{$3}{$4}{$5}|
%    \begin{macrocode}
\NewDocumentCommand{ \bJavaExamen }{ O{firstline=3} m m m m }
{
  \inputminted[#1]{java}{
    \directlua{
      syntax.drucke_absoluten_examens_pfad('#2', '#3', '#4', '#5')
    }
  }

  \li@GithubLink
  {\directlua{syntax.drucke_github_examens_url('#2', '#3', '#4', '#5')}}
  {\directlua{syntax.drucke_relativen_examens_repo_pfad('#2', '#3', '#4', '#5')}}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bJavaExamenDatei}
%    \begin{macrocode}
\NewDocumentCommand{ \bJavaExamenDatei }{ O{firstline=3} m }
{

}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bJavaExamenTestDatei}
%    \begin{macrocode}
\NewDocumentCommand{ \bJavaExamenTestDatei }{ O{firstline=3} m }
{

}
%    \end{macrocode}
% \end{macro}

%    \begin{macrocode}
\ExplSyntaxOff
%    \end{macrocode}

%    \begin{macrocode}
