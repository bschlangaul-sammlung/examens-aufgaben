\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesPackage{bschlangaul-basis}[2020/11/27]
%    \end{macrocode}

%    \begin{macrocode}
\RequirePackage{xparse}
%    \end{macrocode}

%    \begin{macrocode}
\ExplSyntaxOn
%    \end{macrocode}

% \subsubsection{IFs}

% Wir weichen von dem üblichen Namensschema ab und beginnen das |if|
% mit einem Großbuchstaben und schreiben das letzte Worte komplett in
% Großbuchstaben, damit die |if|-Befehle schöner lesbar sind, z. B.
% |\ifLiADDITUM|, |\LiADDITUMtrue| und |\LiADDITUMfalse|.

% \begin{macro}{\ifLiADDITUM}
% \begin{macro}{\LiADDITUMtrue}
% \begin{macro}{\LiADDITUMfalse}
% \begin{macrocode}
\newif\ifLiADDITUM
\LiADDITUMfalse
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}

% \begin{macro}{\ifLiEXKURS}
% \begin{macro}{\LiEXKURStrue}
% \begin{macro}{\LiEXKURSfalse}
%    \begin{macrocode}
\newif\ifLiEXKURS
\LiEXKURStrue
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}

% \begin{macro}{\ifLiANTWORT}
% \begin{macro}{\LiANTWORTtrue}
% \begin{macro}{\LiANTWORTfalse}
%    \begin{macrocode}
\newif\ifLiANTWORT
\LiANTWORTtrue
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}

% \begin{macro}{\liLadePakete}
%    \begin{macrocode}
\NewDocumentCommand{\liLadePakete}{ m }
{
  \clist_map_inline:nn { #1 } { \RequirePackage{bschlangaul-##1} }
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\liLadeAllePakete}
%    \begin{macrocode}
\def\liLadeAllePakete{
  \liLadePakete{
    aufgaben-einbinden,
    automaten,
    checkbox,
    chomsky-normalform,
    cpm,
    cyk-algorithmus,
    entwurfsmuster,
    er,
    formale-sprachen,
    gantt,
    grafik,
    graph,
    hanoi,
    kontrollflussgraph,
    komplexitaetstheorie,
    makros,
    master-theorem,
    mathe,
    minimierung,
    normalformen,
    petri,
    potenzmengen-konstruktion,
    pumping-lemma,
    pseudo,
    quicksort,
    relationale-algebra,
    rmodell,
    sortieren,
    spalten,
    struktogramm,
    sql,
    syntax,
    syntaxbaum,
    synthese-algorithmus,
    tabelle,
    typographie,
    uml,
    vollstaendige-induktion,
    wasserfall,
    wpkalkuel,
    %
    baum, % am Schluss sonst Fehler: undefined command \edge
  }
}
%    \end{macrocode}
% \end{macro}

% Definition einer Komma-getrennten-Liste mit deren Hilfe die
% vielen globalen Token-List-Variablen definiert werden können.
% Die einzelnen Schlüssel sind im Interface |AufgabenMetadaten| in der
% Typescript-Datei |.scripts/nodejs/src/aufgaben.ts| erklärt.
%    \begin{macrocode}
\clist_new:N \g_schluessel_clist
\clist_set:Nn \g_schluessel_clist {
  titel,
  thematik,
  stichwoerter,
  zitat_schluessel,
  zitat_beschreibung,
  %
  bearbeitungs_stand,
  korrektheit,
  %
  relativer_pfad,
  identische_aufgabe,
  %
  einzelpruefungs_nr,
  examen_fach,
  jahr,
  monat,
  jahreszeit,
  thema_nr,
  teilaufgabe_nr,
  aufgabe_nr,
}
%    \end{macrocode}

% Initialisierung der globalen Token-List-Variablen |\g_***_tl|.
% |auf| steht für Aufgabe.
%    \begin{macrocode}
\clist_map_inline:Nn \g_schluessel_clist {
  \tl_new:c {g_auf_#1_tl}
}
%    \end{macrocode}

% Funktion über alle globalen Token-List-Variablen zurückzusetzten.
%    \begin{macrocode}
\cs_new:Npn \_setze_variablen_zurueck: {
  \clist_map_inline:Nn \g_schluessel_clist {
    \tl_clear:c {g_auf_##1_tl}
  }
}
%    \end{macrocode}

% Die einzelnen Schlüssel sind im Interface |AufgabenMetadaten| in der
% Typescript-Datei |.scripts/nodejs/src/aufgaben.ts| erklärt.
%    \begin{macrocode}
\keys_define:nn { aufgabenmetadaten }
{
  Titel               .tl_gset:N = \g_titel_tl,
  Thematik            .tl_gset:N = \g_thematik_tl,
  Stichwoerter        .tl_gset:N = \g_stichwoerter_tl,
  ZitatSchluessel     .tl_gset:N = \g_zitat_beschreibung_tl,
  ZitatBeschreibung   .tl_gset:N = \g_zitat_schluessel_tl,
  %
  BearbeitungsStand   .tl_gset:N = \g_bearbeitungs_stand_tl,
  Korrektheit         .tl_gset:N = \g_korrektheit_tl,
  %
  RelativerPfad       .tl_gset:N = \g_relativer_pfad_tl,
  IdentischeAufgabe   .tl_gset:N = \g_identische_aufgabe_tl,
  %
  ExamenNummer        .tl_gset:N = \g_einzelpruefungs_nr_tl,
  ExamenFach          .tl_gset:N = \g_examen_fach_tl,
  ExamenJahr          .tl_gset:N = \g_jahr_tl,
  ExamenMonat         .tl_gset:N = \g_monat_tl,
  ExamenJahreszeit    .tl_gset:N = \g_jahreszeit_tl,
  ExamenThemaNr       .tl_gset:N = \g_thema_nr_tl,
  ExamenTeilaufgabeNr .tl_gset:N = \g_teilaufgabe_nr_tl,
  ExamenAufgabeNr     .tl_gset:N = \g_aufgabe_nr_tl,
}
%    \end{macrocode}

%    \begin{macrocode}
\cs_gset:Npn \_setze_relativen_pfad: {
  \tl_if_empty:NTF \g_relativer_pfad_tl
  {
    \bool_if:nTF
    {
      ! \tl_if_empty_p:N \g_einzelpruefungs_nr_tl &&
      ! \tl_if_empty_p:N \g_jahr_tl &&
      ! \tl_if_empty_p:N \g_monat_tl
    }
    {
      \tl_gset:Nn \g_relativer_pfad_tl {
        Staatsexamen /
        \g_einzelpruefungs_nr_tl /
        \g_jahr_tl /
        \g_monat_tl /
        \tl_if_empty:NTF \g_thema_nr_tl {} { Thema - \g_thema_nr_tl / }
        \tl_if_empty:NTF \g_teilaufgabe_nr_tl {} { Teilaufgabe - \g_teilaufgabe_nr_tl / }
        \tl_if_empty:NTF \g_aufgabe_nr_tl {} { Aufgabe - \g_aufgabe_nr_tl .tex }
      }
    }
    {}
  }
  {}
}
%    \end{macrocode}

%    \begin{macrocode}
\cs_set:Nn \_trenner: {
  \, / \,
}
%    \end{macrocode}

%    \begin{macrocode}
\cs_gset:Npn \_gib_jahreszeit_durch_monat: #1 {
  % \str_case funktioniert nicht mit den Tokenlist variablen.
  \tl_case:Nn { #1 }
  {
    { 3 } { Frühjahr }
    { 03 } { Frühjahr }
    { 9 } { Herbst }
    { 09 } { Herbst }
  }
}
%    \end{macrocode}

% Definiert auch in .scripts/nodejs/src/examen.ts funktioniert nicht
%    \begin{macrocode}
\cs_gset:Npn \_gib_examen_fach_durch_nummer: #1 {
  \tl_case:Nn { #1 }
  {
    { 46110 } { Grundlagen der Informatik (nicht vertieft) }
    { 46111 } { Programmentwicklung / Systemprogrammierung / Datenbanksysteme (nicht vertieft) }
    { 46112 } { Grundlagen der Informatik (nicht vertieft) }
    { 46113 } { Theoretische Informatik (nicht vertieft) }
    { 46114 } { Algorithmen / Datenstrukturen / Programmiermethoden (nicht vertieft) }
    { 46115 } { Theoretische Informatik / Algorithmen / Datenstrukturen (nicht vertieft) }
    { 46116 } { Softwaretechnologie / Datenbanksysteme (nicht vertieft) }
    { 46118 } { Fachdidaktik (Mittelschulen) }
    { 46119 } { Fachdidaktik (Realschulen) }
    { 46121 } { Fachdidaktik (berufliche Schulen) }
    { 66110 } { Automatentheorie, Algorithmische Sprache (vertieft) }
    { 66111 } { Betriebssysteme / Datenbanksysteme / Rechnerarchitektur (vertieft) }
    { 66112 } { Automatentheorie / Komplexität / Algorithmen (vertieft) }
    { 66113 } { Rechnerarchitektur / Datenbanken / Betriebssysteme (vertieft) }
    { 66114 } { Datenbank- und Betriebssysteme (vertieft) }
    { 66115 } { Theoretische Informatik / Algorithmen (vertieft) }
    { 66116 } { Datenbanksysteme / Softwaretechnologie (vertieft) }
    { 66118 } { Fachdidaktik (Gymnasium) }
  }
}
%    \end{macrocode}

% „Einzelprüfungsnummer / Jahr / Jahreszeit“ mit Trennzeichen
%    \begin{macrocode}
\cs_gset:Npn \_gib_einzelpruefung_trenner: {
  \g_einzelpruefungs_nr_tl

  \_trenner:

  \g_jahr_tl

  \_trenner:

  \_gib_jahreszeit_durch_monat: \g_monat_tl
}
%    \end{macrocode}

% Thema 1 / Teilaufgabe 2 / Aufgabe 3
%    \begin{macrocode}
\cs_gset:Npn \_gib_aufgaben_pfad_trenner: {
  \tl_if_empty:NTF \g_thema_nr_tl {} {
    Thema ~ \g_thema_nr_tl \_trenner:
  }
  \tl_if_empty:NTF \g_teilaufgabe_nr_tl {} {
    Teilaufgabe ~ \g_teilaufgabe_nr_tl \_trenner:
  }
  \tl_if_empty:NTF \g_aufgabe_nr_tl {} {
    Aufgabe ~ \g_aufgabe_nr_tl
  }
}
%    \end{macrocode}

% Gib den langen Titelpfad einer Aufgabe. Ist die Aufgabe keine
% Examensaufgabe, wird auch eine Titel zurückgegeben. Für die
% Kopfzeile gedacht.
%    \begin{macrocode}
\cs_new:Npn \gib_aufgaben_pfad_lang_sicher: {
  \tl_if_empty:NTF \g_einzelpruefungs_nr_tl
  {
    \g_titel_tl
  }
  {
    \_gib_einzelpruefung_trenner:
    \_trenner:
    \_gib_aufgaben_pfad_trenner:
  }
}
%    \end{macrocode}

%    \begin{macrocode}
\cs_gset:Npn \_gib_examen_titel:
{
  \cs_set:Nn \_trenner: { \, / \, }
  \bool_if:nTF
  {
    ! \tl_if_empty_p:N \g_einzelpruefungs_nr_tl &&
    ! \tl_if_empty_p:N \g_jahr_tl &&
    ! \tl_if_empty_p:N \g_monat_tl &&
    ! \tl_if_empty_p:N \g_aufgabe_nr_tl
  }
  {
    {
      \footnotesize
      \par
      \noindent
      Staatsexamen ~
      \g_einzelpruefungs_nr_tl \_trenner:
      \g_jahr_tl \_trenner:

      \tl_case:Nn \g_monat_tl
      {
        { 03 } { Frühjahr }
        { 09 } { Herbst }
      } \_trenner:

      \tl_if_empty:NTF \g_thema_nr_tl {} {
        Thema ~ Nr. ~ \g_thema_nr_tl \_trenner:
      }
      \tl_if_empty:NTF \g_teilaufgabe_nr_tl {} {
        Teilaufgabe ~ Nr. ~ \g_teilaufgabe_nr_tl \_trenner:
      }
      \tl_if_empty:NTF \g_aufgabe_nr_tl {} {
        Aufgabe ~ Nr. ~ \g_aufgabe_nr_tl
      }
      \par
      \bigskip
    }
  }
}
%    \end{macrocode}

%    \begin{macrocode}
\cs_new:Npn \_gib_github_url: {
  \LehramtInformatikGithubDomain /
  \LehramtInformatikGithubTexRepo /
  blob /
  \LehramtInformatikGitBranch /
  \g_relativer_pfad_tl
}
%    \end{macrocode}

%    \begin{macrocode}
\cs_new:Npn \_gib_github_url_href: {
  \tl_if_empty:NTF \g_relativer_pfad_tl {} {
    \url{ \_gib_github_url: }
  }
}
%    \end{macrocode}

%    \begin{macrocode}
\cs_new:Npn \_gib_aufgaben_titel: {
  \g_titel_tl

  \tl_if_empty:NTF \g_thematik_tl
  {}
  {
   \, ~ [
    \g_thematik_tl
   ]
  }
}
%    \end{macrocode}

%    \begin{macrocode}
\msg_new:nnn { aufgabenmetadaten } { kein-titel }
  { Der~Schlüssel~ist~zwingend~notwendig }
%    \end{macrocode}

% |\def\LehramtInformatikRepository{/pfad/zum/repository}|
%    \begin{macrocode}
\input /etc/lehramt-informatik.config.tex
%    \end{macrocode}

% biblatex not working with lualatex and babel
%    \begin{macrocode}
% \RequirePackage{polyglossia}
% \setmainlanguage{german}
%    \end{macrocode}

%    \begin{macrocode}
