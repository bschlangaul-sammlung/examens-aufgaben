\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesPackage{bschlangaul-normalformen}[2020/12/10
Hilfsmakros zum Setzen von Normalformen, Funktionalen Abhänigkeiten,
Attributhülle]
%    \end{macrocode}

% Mathe für textit tex etc, typographie für geschweifte Klammer
%    \begin{macrocode}
\liLadePakete{mathe,typographie}
%    \end{macrocode}

%    \begin{macrocode}
\directlua{
  helfer = require('bschlangaul-helfer')
  normalformen = require('bschlangaul-normalformen')
}
%    \end{macrocode}

% \liLets{
%   ah = liAttributHuelle,
%   ahL = liLinksReduktion,
%   ahl = liLinksReduktionInline,
%   ahr = liRechtsReduktionInline,
%   fa = liFunktionaleAbhaengigkeit,
%   FA = liFunktionaleAbhaengigkeiten,
%   m = liAttributMenge,
%   r = liRelation,
%   u = underline,
% }

%    \begin{macrocode}
\def\liTeilen#1{
  \directlua{tex.print(normalformen.teilen('#1'))}
}
%    \end{macrocode}

% \begin{macro}{\liAttributHuelle}
% \liLet{ah}{liAttributHuelle}
% |\ah{F, \m{A, B}}| \liAttributHuelle{F, \liAttributMenge{A, B}}
% Regulärer Ausdruck zum Konvertieren
% |AttrHülle\((.*)\)|
% |\\ah{$1}|
%    \begin{macrocode}
\def\liAttributHuelleOhneMathe#1{\text{AttrHülle}(#1)}
\def\liAttributHuelle#1{
\ifmmode
  \liAttributHuelleOhneMathe{#1}
\else
  $\liAttributHuelleOhneMathe{#1}$
\fi
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\liAttributMenge}
% \liLet{m}{liAttributMenge}
%    \begin{macrocode}
\def\liAttributMenge#1{\{ \textit{#1} \}}
%    \end{macrocode}
% \end{macro}

% \begin{environment}{liAHuelle}
%    \begin{macrocode}
\NewDocumentEnvironment{ liAHuelle } { +b } {
  \begingroup
  \footnotesize
  \begin{multline*}
    #1
  \end{multline*}
  \endgroup
} { }
%    \end{macrocode}
% \end{environment}

% \begin{macro}{\liLinksReduktion}
% Nur innerhalb von |liAHuelle| zu verwenden
% bzw. |multline|
% \liLet{ahL}{liLinksReduktion}
% |\ahL{ursprüngliche linke Attributmenge}{ohne dieses Attribut}{Ergebnis}|
%    \begin{macrocode}
\def\liLinksReduktion#1#2#3{
  \shoveleft{
    \liAttributHuelleOhneMathe{FA,
    \liAttributMenge{#1 \string\ #2}} =
    } \\
  \shoveright{
    \liAttributMenge{#3}
  } \\
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\liLinksReduktionInline}
% \liLet{ahL}{liLinksReduktionInline}
% |\ahl{ursprüngliche linke Attributmenge}{ohne dieses Attribut}{Ergebnis}|
% |\ahl{A, E}{E}{A, E, F, B, \textbf{D}}|: \liLinksReduktionInline{A, E}{E}{A, E, F, B, \textbf{D}}
%    \begin{macrocode}
\def\liLinksReduktionInline#1#2#3{%
  {%
    \footnotesize%
    $\liAttributHuelleOhneMathe{F,
    \liAttributMenge{#1 \string\ #2}} =
    \liAttributMenge{#3}$
  }
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\liLinksReduktionInline}
% \liLet{ahr}{liLinksReduktionInline}
% |\ahr{gelöschte FA}{neue FA ohne rechts Attribut}{gegebene Attribute}{Ergebnis}|
%    \begin{macrocode}
\def\liRechtsReduktionInline#1#2#3#4{%
  {%
    \footnotesize%
    $\liAttributHuelleOhneMathe{
      F \setminus
      \liFunktionaleAbhaengigkeit{#1}
      \def\tmp{#2}\ifx\tmp\empty
      \else
        \cup \liFunktionaleAbhaengigkeit{#2}
      \fi
      ,
      \liAttributMenge{#3}
    } =
    \liAttributMenge{#4}$
  }
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\liFunktionaleAbhaengigkeit}
% \liLet{fa}{liFunktionaleAbhaengigkeit}
% |\fa{A, B -> C, D}|: \liFunktionaleAbhaengigkeit{A, B -> C, D}
% Regulärer Ausdruck zum Konvertieren: |\$(.*?) \\rightarrow (.*?)\$|
% |\\fa{$1 -> $2}|
%    \begin{macrocode}
\def\liFunktionaleAbhaengigkeit#1{%
  \directlua{normalformen.drucke_funk_abhaengigkeit('#1', false)}%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\liFunktionaleAbhaengigkeiten}
% \begin{verbatim}
% \FA[F]{
%   M -> M;
%   M -> N;
%   V -> T, P, PN;
%   P -> PN;
% }
% \end{verbatim}
%
% \begin{liBeispiel}
% \liFunktionaleAbhaengigkeiten[F]{
%   M -> M;
%   M -> N;
%   V -> T, P, PN;
%   P -> PN;
% }
% \end{liBeispiel}
% \liLet{FA}{liFunktionaleAbhaengigkeiten}
% Regulärer Ausdruck zum Konvertieren:
% |\\item \$(.*) \\rightarrow (.*)\$|
% |\$(.*) \\rightarrow (.*)\$|
% |$1 -> $2;|
%    \begin{macrocode}
\NewDocumentCommand {\liFunktionaleAbhaengigkeiten} { O{FA} m } {
  \liGeschweifteKlammern
  {#1}
  {
    \begin{align*}
    \directlua{normalformen.drucke_funk_abhaengigkeiten('#2')}
    \end{align*}
  }
  {-0.5cm}
  {-1.7cm}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\liRelation}
% \liLet{r}{liRelation}
% |\r[R3]{\u{A}, B, C}|: \liRelation[R3]{\underline{A}, B, C}
% Regulärer Ausdruck zum Konvertieren:
% |\$(R.*)\((.*)\)\$|
% |\\liRelation[$1]{$2}|
%    \begin{macrocode}
\NewDocumentCommand {\liRelation} { O{R} m } {
  $\directlua{
    local name = helfer.konvertiere_tiefgestellt('#1')
    tex.print(name)
  }$(\textit{\,#2\,})
}
%    \end{macrocode}
% \end{macro}

%    \begin{macrocode}
