\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesPackage{bschlangaul-master-theorem}[2021/04/13]
%    \end{macrocode}

% \bFaulenzer{
%   O = bO,
%   o = bOmega,
%   T = bT,
%   t = bTheta,
% }

% \begin{verbatim}
% \bMasterVariablenDeklaration
% {3} % a
% {3} % b
% {\mathcal{O}(1)} % f(n)
%
% \bMasterFallRechnung
% % 1. Fall
% {für $\varepsilon = 4$: \\
% $f(n) = 5n^2 \in \O{n^{\log_2 {8 - 4}}} = \O{n^{\log_2 4}} = \O{n^2}$}
% % 2. Fall
% {$f(n) = 5n^2 \notin \t{n^{\log_2 {8}}} = \t{n^3}$}
% % 3. Fall
% {$f(n) = 5n^2 \notin \o{n^{\log_2 {8 + \varepsilon}}}$}
%
% \bMasterWolframLink{T[n]=9T[n/3]\%2B5n^2}
% \end{verbatim}

% \begin{verbatim}
% \bMasterVariablenDeklaration
% {} % a
% {} % b
% {} % f(n) ohne $mathe$
%
% \bMasterFallRechnung
% % 1. Fall
% {}
% % 2. Fall
% {}
% % 3. Fall
% {}
%
% $\Rightarrow T(n) \in \t{n^2 \cdot \log n}$
% \bMasterWolframLink{T[n]=9T[n/3]\%2B5n^2}
% \end{verbatim}

%    \begin{macrocode}
\ExplSyntaxOn
\RequirePackage{amsmath}
%    \end{macrocode}

% \begin{macro}{\bRundeKlammer}
%    \begin{macrocode}
\def\bRundeKlammer#1{
  \negthinspace \left( #1 \right)
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bTheta}
% |\bTheta{n^2}|: \bTheta{n^2}
%    \begin{macrocode}
\def\bThetaOhneMathe#1{
  \Theta \bRundeKlammer{#1}
}
\def\bTheta#1{
  \ifmmode
    \bThetaOhneMathe{#1}
  \else
    $\bThetaOhneMathe{#1}$
  \fi
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bOmega}
% |\bOmega{n^2}|: \bOmega{n^2}
%    \begin{macrocode}
\def\bOmegaOhneMathe#1{
  \Omega \bRundeKlammer{#1}
}
\def\bOmega#1{
  \ifmmode
    \bOmegaOhneMathe{#1}
  \else
    $\bOmegaOhneMathe{#1}$
  \fi
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bO}
% |\bO{n^2}|: \bO{n^2}
%    \begin{macrocode}
\def\bOOhneMathe#1{
  \mathcal{O} \bRundeKlammer{#1}
}
\def\bO#1{
  \ifmmode
    \bOOhneMathe{#1}
  \else
    $\bOOhneMathe{#1}$
  \fi
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bT}
% \bMakroFaulenzer{T}{liT}
% |\bT{16}{2}|: \bT{16}{2}
% |\bT{}{2}|: \bT{}{2}
%    \begin{macrocode}
\def\bTOhneMathe#1#2{
  \tl_if_blank:nTF {#1}
  {}
  {#1 \cdot }
  T
  \bRundeKlammer{\frac{n}{#2}}
}
\def\bT#1#2{
  \ifmmode
    \bTOhneMathe{#1}{#2}
  \else
    $\bTOhneMathe{#1}{#2}$
  \fi
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bRekursionsGleichung}
% |\bRekursionsGleichung|: \bRekursionsGleichung
%    \begin{macrocode}
\def\bRekursionsGleichung{
  $T(n) = \bT{a}{b} + f(n)$
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bBedingungEins}
% |\bBedingungEins|: \bBedingungEins
%    \begin{macrocode}
\def\bBedingungEins{
  $f(n) \in \bO{n^{\log\sb{b}a - \varepsilon}}$
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bBedingungZwei}
% |\bBedingungZwei|: \bBedingungZwei
%    \begin{macrocode}
\def\bBedingungZwei{
  $f(n) \in \bTheta{n^{\log\sb{b}a}}$
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bBedingungDrei}
% |\bBedingungDrei|: \bBedingungDrei
%    \begin{macrocode}
\def\bBedingungDrei{
  $f(n) \in \bOmega{n^{\log\sb{b}a + \varepsilon}}$
}
%    \end{macrocode}
% \end{macro}

%    \begin{macrocode}
\ExplSyntaxOff
%    \end{macrocode}

% \begin{macro}{\bMasterVariablen}
%    \begin{macrocode}
\def\bMasterVariablen{
  \begin{displaymath}
  T(n) = \bT{a}{b} + f(n)
  \end{displaymath}

  \begin{itemize}
  \item[$a =$]
  Anzahl der rekursiven Aufrufe, Anzahl der Unterprobleme in der
  Rekursion
  ($a \geq 1$).

  \item[$\textstyle{\frac{1}{b}} =$]
  Teil des Originalproblems, welches wiederum durch alle Unterprobleme
  repräsentiert wird, Anteil an der Verkleinerung des Problems ($b > 1$).

  \item[$f(n) =$]
  Kosten (Aufwand, Nebenkosten), die durch die Division des Problems und
  die Kombination der Teillösungen entstehen. Eine von $T(n)$
  unabhängige und nicht negative Funktion.
  \end{itemize}
  \footcite{wiki:master-theorem}
  \footcite[Seite 19-35]{aud:fs:2}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bMasterFaelle}
%    \begin{macrocode}
\def\bMasterFaelle{
  \begin{description}
  \item[1. Fall:]
  $T(n) \in \bTheta{n^{\log\sb{b}a}}$

  \hfill falls \bBedingungEins
  für $\varepsilon > 0$

  \item[2. Fall:]
  $T(n) \in \bTheta{n^{\log\sb{b}a} \cdot \log n}$

  \hfill falls \bBedingungZwei

  \item[3. Fall:]
  $T(n) \in \bTheta{f(n)}$

  \hfill falls \bBedingungDrei
  für $\varepsilon > 0$
  und ebenfalls für ein $c$ mit $0 < c < 1$ und alle hinreichend großen $n$
  gilt:
  $a \cdot f(\textstyle {\frac {n}{b}})\leq c \cdot f(n)$
  \end{description}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bMasterVariablenDeklaration}
%    \begin{macrocode}
\def\bMasterVariablenDeklaration#1#2#3{
  \begin{description}
    \item[Allgemeine Rekursionsgleichung:] \strut

    \bRekursionsGleichung

    \item[Anzahl der rekursiven Aufrufe ($a$):] \strut

    #1

    \item[Anteil Verkleinerung des Problems ($b$):] \strut

    um $\frac{1}{#2}$ also $b = #2$

    \item[Laufzeit der rekursiven Funktion ($f(n)$):] \strut

    $#3$

    \item[Ergibt folgende Rekursionsgleichung:] \strut

    $T(n) = \bT{#1}{#2} + #3$
  \end{description}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bMasterFallRechnung}
%    \begin{macrocode}
\def\bMasterFallRechnung#1#2#3{
  \begin{description}
  \item[1. Fall:] \bBedingungEins:

  #1

  \item[2. Fall:] \bBedingungZwei:

  #2

  \item[3. Fall:] \bBedingungDrei:

  #3
  \end{description}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bMasterExkurs}
%    \begin{macrocode}
\def\bMasterExkurs{
  \begin{bExkurs}[Master-Theorem]
  \bMasterVariablen

  \noindent
  Dann gilt:

  \bMasterFaelle
  \end{bExkurs}
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\bMasterWolframLink}
% Link zu Wolframalpha (+ durch Prozent 2B ersetzen)
%    \begin{macrocode}
\def\bMasterWolframLink#1{
  Berechne die Rekursionsgleichung auf WolframAlpha:
  \href{https://www.wolframalpha.com/input/?i=#1}{WolframAlpha}
}
%    \end{macrocode}
% \end{macro}

%    \begin{macrocode}
